!function(e){var t={};function r(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(o,i,function(t){return e[t]}.bind(null,i));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/bundles/administration/",r(r.s="Xd6C")}({"6Eiv":function(e,t){Shopware.Component;Shopware.Component.extend("scop-platform-redirect-create","scop-platform-redirect-details",{methods:{getRedirect:function(){this.redirect=this.repository.create(Shopware.Context.api),this.redirect.httpCode=302,this.redirect.enabled=!0},onClickSave:function(){var e=this;this.redirect.sourceURL!==this.redirect.targetURL?(this.isLoading=!0,this.repository.save(this.redirect,Shopware.Context.api).then((function(){e.isLoading=!1,e.$router.push({name:"scop.platform.redirect.list",params:{id:e.redirect.id}})})).catch((function(t){e.isLoading=!1,e.createNotificationError({title:e.$tc("scopplatformredirecter.general.errorTitle"),message:t})}))):this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.detail.errorSameUrlDescription")})}}})},AqYM:function(e,t){e.exports='{% block scop_platform_redirect_import_modal %}\n    <div class="scop-platform-redirect-import-modal">\n        <sw-modal\n                v-if="show"\n                class="scop-platform-redirect-import-modal"\n                :title="$tc(\'scopplatformredirecter.list.importModal.title\')"\n                variant="small"\n                @modal-close="onClose"\n        >\n            {% block scop_platform_redirect_import_modal_content %}\n\n                <sw-card :hero="true" :isLoading="processing">\n                    <sw-file-input\n                            v-model="selectedFile"\n                            :allowedMimeTypes="[\'text/csv\']"\n                            :maxFileSize="8*1024*1024"\n                            @change="onFileChange">\n                    </sw-file-input>\n                </sw-card>\n            {% endblock %}\n            {% block scop_platform_redirect_import_modal_options %}\n                <sw-switch-field\n                        :label="$tc(\'scopplatformredirecter.list.importModal.overrideID\')"\n                        v-model="overrideID"\n                        :help-text="overrideIDHelp"\n                ></sw-switch-field>\n                <sw-switch-field\n                        :label="$tc(\'scopplatformredirecter.list.importModal.override\')"\n                        v-model="override"\n                        :help-text="overrideHelp"\n                ></sw-switch-field>\n            {% endblock %}\n            {% block scop_platform_redirect_import_modal_footer %}\n                <template slot="modal-footer">\n                    <sw-button @click="onClose" :disabled="processing">\n                        {{ $t(\'scopplatformredirecter.list.importModal.cancel\') }}\n                    </sw-button>\n                    <sw-button variant="primary" :disabled="noFile" :isLoading="processing" @click="startImport">\n                        {{ $t(\'scopplatformredirecter.list.importModal.import\') }}\n                    </sw-button>\n                </template>\n            {% endblock %}\n        </sw-modal>\n    </div>\n{% endblock %}\n'},LPKO:function(e,t){e.exports='{% block scop_platform_redirect_details %}\n    <sw-page class="scop-platform-redirect-details">\n        <template slot="smart-bar-actions">\n            <sw-button :routerLink="{name: \'scop.platform.redirect.list\'}">\n                {{ $t(\'scopplatformredirecter.detail.cancelButton\') }}</sw-button>\n            <sw-button-process :isLoading="isLoading"\n                               :processSuccess="processSuccess" variant="primary"\n                               @process-finish="saveFinish" @click="onClickSave">\n                {{ $t(\'scopplatformredirecter.detail.saveButton\') }}</sw-button-process>\n        </template>\n        <template slot="content">\n            <sw-card-view>\n                <sw-card v-if="redirect" :isLoading="isLoading">\n                    <sw-field :label="$t(\'scopplatformredirecter.detail.sourceUrlLabel\')" v-model="redirect.sourceURL"\n                              validation="required"></sw-field>\n                    <sw-field :label="$t(\'scopplatformredirecter.detail.targetUrlLabel\')" v-model="redirect.targetURL"\n                              validation="required"></sw-field>\n                    <sw-select-number-field :label="$t(\'scopplatformredirecter.detail.httpCodeLabel\')"\n                                            v-model="redirect.httpCode" validation="required" :help-text="helptext">\n                        <option value=301>{{ $t(\'scopplatformredirecter.detail.httpCodeLabelValues.301\') }}</option>\n                        <option value=302>{{ $t(\'scopplatformredirecter.detail.httpCodeLabelValues.302\') }}</option>\n                    </sw-select-number-field>\n                    <sw-switch-field :label="$tc(\'scopplatformredirecter.detail.enabledLabel\')"\n                                     v-model="redirect.enabled" validation="required"></sw-switch-field>\n                </sw-card>\n            </sw-card-view>\n        </template>\n    </sw-page>\n{% endblock %}'},Ttox:function(e,t){e.exports='{% block scop_platform_redirect_list %}\r\n    <sw-page class="scop-platform-redirect-list">\r\n        <template slot="smart-bar-actions">\r\n            {% block scop_platform_redirect_list_smarbar %}\r\n                <sw-button variant="primary" :routerLink="{name: \'scop.platform.redirect.create\'}">\r\n                    {{ $t(\'scopplatformredirecter.list.createButton\') }}\r\n                </sw-button>\r\n                <sw-button @click="onClickExport" :isLoading="exportLoading" :disabled="noRedirect">\r\n                    {{ $t(\'scopplatformredirecter.list.exportAllButton\') }}\r\n                </sw-button>\r\n                <sw-button @click="onClickImport">\r\n                    {{ $t(\'scopplatformredirecter.list.importButton\') }}\r\n                </sw-button>\r\n            {% endblock %}\r\n        </template>\r\n        <template slot="content">\r\n            {% block scop_platform_redirect_list_content %}\r\n                <sw-entity-listing\r\n                        v-if="redirect"\r\n                        :items="redirect"\r\n                        :repository="repository"\r\n                        :columns="columns"\r\n                        detailRoute="scop.platform.redirect.details"\r\n                        @update-records="onUpdate"\r\n                >\r\n                </sw-entity-listing>\r\n            {% endblock %}\r\n            {% block scop_platform_redirect_list_view_import_modal %}\r\n                <scop-platform-redirect-import-modal\r\n                    :show="showImport"\r\n                    @close="closeImport"\r\n                    @updateList="updateList"\r\n                >\r\n                </scop-platform-redirect-import-modal>\r\n            {% endblock %}\r\n        </template>\r\n    </sw-page>\r\n{% endblock %}'},Xd6C:function(e,t,r){"use strict";r.r(t);var o=r("Ttox"),i=r.n(o);function n(e,t,r,o,i,n,a){try{var l=e[n](a),c=l.value}catch(e){return void r(e)}l.done?t(c):Promise.resolve(c).then(o,i)}var a=Shopware.Data.Criteria,l=Shopware,c=(l.Component,l.Mixin);Shopware.Component.register("scop-platform-redirect-list",{template:i.a,inject:["repositoryFactory","syncService","loginService"],mixins:[c.getByName("notification")],data:function(){return{repository:null,redirect:null,exportLoading:!1,noRedirect:!0,showImport:!1}},metaInfo:function(){return{title:this.$createTitle()}},computed:{columns:function(){return[{property:"sourceURL",dataIndex:"sourceURL",label:this.$tc("scopplatformredirecter.list.columnSourceUrl"),routerLink:"scop.platform.redirect.details",inlineEdit:"string",allowResize:!0,primary:!0},{property:"targetURL",dataIndex:"targetURL",label:this.$tc("scopplatformredirecter.list.columnTargetUrl"),inlineEdit:"string",allowResize:!0},{property:"httpCode",dataIndex:"httpCode",label:this.$tc("scopplatformredirecter.list.columnHttpCode"),allowResize:!0},{property:"enabled",dataIndex:"enabled",label:this.$tc("scopplatformredirecter.list.columnEnabled"),inlineEdit:"boolean"}]}},created:function(){var e=this;this.repository=this.repositoryFactory.create("scop_platform_redirecter_redirect"),this.repository.search(new a,Shopware.Context.api).then((function(t){e.redirect=t}))},methods:{onClickExport:function(){var e,t=this;return(e=regeneratorRuntime.mark((function e(){var r,o,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.exportLoading=!0,r={Authorization:"Bearer ".concat(t.loginService.getToken())},o=t.syncService.httpClient,e.next=5,o.post("/_action/scop/platform/redirecter/prepare-export",{},{headers:r}).catch((function(e){t.createNotificationError({title:t.$tc("scopplatformredirecter.general.errorTitle"),message:t.$tc("scopplatformredirecter.list.fileNotCreated")}),t.exportLoading=!1}));case 5:if(i=e.sent,t.exportLoading){e.next=8;break}return e.abrupt("return");case 8:if(t.exportLoading=!1,200===i.status){e.next=12;break}return t.createNotificationError({title:t.$tc("scopplatformredirecter.general.errorTitle"),message:t.$tc("scopplatformredirecter.list.fileNotCreated")}),e.abrupt("return");case 12:return e.next=14,window.open("/api/_action/scop/platform/redirecter/download-export?filename="+i.data.file,"_blank");case 14:case"end":return e.stop()}}),e)})),function(){var t=this,r=arguments;return new Promise((function(o,i){var a=e.apply(t,r);function l(e){n(a,o,i,l,c,"next",e)}function c(e){n(a,o,i,l,c,"throw",e)}l(void 0)}))})()},onUpdate:function(e){this.noRedirect=0===e.length},onClickImport:function(){this.showImport=!0},closeImport:function(){this.showImport=!1},updateList:function(){var e=this,t=this.redirect.criteria;this.repository.search(t,Shopware.Context.api).then((function(t){e.redirect=t}))}}});var s=r("LPKO"),p=r.n(s),d=Shopware,m=d.Component,u=d.Mixin;m.register("scop-platform-redirect-details",{template:p.a,inject:["repositoryFactory"],mixins:[u.getByName("notification")],metaInfo:function(){return{title:this.$createTitle()}},data:function(){return{redirect:null,isLoading:!1,processSuccess:!1,repository:null}},created:function(){this.repository=this.repositoryFactory.create("scop_platform_redirecter_redirect"),this.getRedirect()},computed:{helptext:function(){return'<sw-external-link href="'+this.$tc("scopplatformredirecter.general.moreInformationLink")+'">'+this.$tc("scopplatformredirecter.general.moreInformation")+"</sw-external-link>"}},methods:{getRedirect:function(){var e=this;this.repository.get(this.$route.params.id,Shopware.Context.api).then((function(t){e.redirect=t}))},onClickSave:function(){var e=this;this.redirect.sourceURL!==this.redirect.targetURL?(this.isLoading=!0,this.repository.save(this.redirect,Shopware.Context.api).then((function(){e.getRedirect(),e.isLoading=!1,e.processSuccess=!0})).catch((function(t){e.isLoading=!1,e.createNotificationError({title:e.$tc("scopplatformredirecter.general.errorTitle"),message:t})}))):this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.detail.errorSameUrlDescription")})},saveFinish:function(){this.processSuccess=!1}}});r("6Eiv");var f=r("AqYM"),h=r.n(f);function g(e,t,r,o,i,n,a){try{var l=e[n](a),c=l.value}catch(e){return void r(e)}l.done?t(c):Promise.resolve(c).then(o,i)}var b=Shopware,v=b.Component,w=b.Mixin;v.register("scop-platform-redirect-import-modal",{template:h.a,inject:["syncService","loginService"],mixins:[w.getByName("notification")],data:function(){return{selectedFile:null,noFile:!0,processing:!1,override:!1,overrideID:!0}},props:{show:{type:Boolean,required:!0,default:!1}},metaInfo:function(){return{title:this.$createTitle()}},computed:{overrideIDHelp:function(){return this.$tc("scopplatformredirecter.list.importModal.overrideIDHelp",0,{moreInformation:'<sw-external-link href="'+this.$tc("scopplatformredirecter.general.moreInformationLink")+'">'+this.$tc("scopplatformredirecter.general.moreInformation")+"</sw-external-link>"})},overrideHelp:function(){return this.$tc("scopplatformredirecter.list.importModal.overrideHelp",0,{moreInformation:'<sw-external-link href="'+this.$tc("scopplatformredirecter.general.moreInformationLink")+'">'+this.$tc("scopplatformredirecter.general.moreInformation")+"</sw-external-link>"})}},methods:{onClose:function(){this.processing||this.$emit("close")},onFileChange:function(e){this.file=e,this.noFile=null==e},startImport:function(){var e,t=this;return(e=regeneratorRuntime.mark((function e(){var r,o,i,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.processing=!0,(r=new FormData).set("file",t.file),r.set("overrideID",t.overrideID),r.set("override",t.override),o={Authorization:"Bearer ".concat(t.loginService.getToken())},i=t.syncService.httpClient,e.next=9,i.post("/_action/scop/platform/redirecter/import",r,{headers:o}).catch((function(e){t.createNotificationError({title:t.$tc("scopplatformredirecter.general.errorTitle"),message:t.$tc("scopplatformredirecter.list.fileNotImported")}),t.processing=!1}));case 9:if(n=e.sent,t.processing){e.next=12;break}return e.abrupt("return");case 12:if(200===n.status&&"File Imported!"===n.data.detail){e.next=19;break}return"File is not a Redirects Export"===n.data.detail?t.createNotificationError({title:t.$tc("scopplatformredirecter.general.errorTitle"),message:t.$tc("scopplatformredirecter.list.invalidFile")}):t.createNotificationError({title:t.$tc("scopplatformredirecter.general.errorTitle"),message:t.$tc("scopplatformredirecter.list.fileNotImported")}),t.processing=!1,t.$emit("updateList"),e.abrupt("return");case 19:n.data.skipped>0?t.createNotification({title:t.$tc("scopplatformredirecter.list.importDone"),message:t.$tc("scopplatformredirecter.list.fileImported",0,{amount:n.data.amount,skipped:n.data.skipped})}):t.createNotification({title:t.$tc("scopplatformredirecter.list.importDone"),message:t.$tc("scopplatformredirecter.list.fileImportedNoSkip",0,{amount:n.data.amount})});case 20:t.processing=!1,t.$emit("updateList"),t.$emit("close");case 23:case"end":return e.stop()}}),e)})),function(){var t=this,r=arguments;return new Promise((function(o,i){var n=e.apply(t,r);function a(e){g(n,o,i,a,l,"next",e)}function l(e){g(n,o,i,a,l,"throw",e)}a(void 0)}))})()}}});var L=r("miuI"),I=r("zvnb");Shopware.Module.register("scop-platform-redirect",{type:"plugin",name:"scop-platform-redirect",title:"scopplatformredirecter.general.title",description:"scopplatformredirecter.general.title",color:"#019994",icon:"small-copy",routes:{list:{component:"scop-platform-redirect-list",path:"list"},details:{component:"scop-platform-redirect-details",path:"details",meta:{parentPath:"scop.platform.redirect.list"}},create:{component:"scop-platform-redirect-create",path:"create",meta:{parentPath:"scop.platform.redirect.list"}}},settingsItem:[{to:"scop.platform.redirect.list",group:"shop",icon:"small-arrow-large-double-right"}],snippets:{"de-DE":L,"en-GB":I}})},miuI:function(e){e.exports=JSON.parse('{"scopplatformredirecter":{"general":{"title":"Weiterleitungen","errorTitle":"Fehler","moreInformation":"Weitere Informationen","moreInformationLink":"https://scope01.com/shopware-redirect-plugin/"},"list":{"columnSourceUrl":"Quell URL","columnTargetUrl":"Ziel URL","columnHttpCode":"HTTP Status Code","columnEnabled":"Aktiviert","createButton":"Weiterleitung anlegen","exportAllButton":"Alle Exportieren","importButton":"Importieren","fileNotCreated":"Die Datei konnte nicht erstellt werden","fileNotImported":"Die Datei konnte nicht importiert werden","invalidFile":"Ungültige Datei","importDone":"Import abgeschlossen","fileImportedNoSkip":"Es wurden {amount} Weiterleitungen importiert","fileImported":"Es wurden {amount} Weiterleitungen importiert.<br>{skipped} Weiterleitungen wurden nicht importiert, da sie bereits vorhanden waren und nicht überschrieben werden sollten","importModal":{"title":"Importieren","cancel":"Abbrechen","import":"Importieren","override":"Bei gleicher Quell URL überschreiben","overrideHelp":"Ist die Quell URL bereits vorhanden, wird mit dieser Option das vorhandene Ziel sowie der vorhandene HTTP Status Code überschrieben. {moreInformation}","overrideID":"Bei gleicher ID überschreiben","overrideIDHelp":"Ist die ID bereits vorhanden, wird mit dieser Option der vorhandene Eintrag überschrieben. {moreInformation}"}},"detail":{"sourceUrlLabel":"Quell URL","targetUrlLabel":"Ziel URL","httpCodeLabel":"HTTP Status Code","enabledLabel":"Aktiviert","cancelButton":"Abbrechen","saveButton":"Speichern","errorSameUrlDescription":"Die Quell URL und Ziel URL dürfen nicht gleich sein","httpCodeLabelValues":{"301":"301 (Permanent verschoben)","302":"302 (Temporär verschoben)"}}}}')},zvnb:function(e){e.exports=JSON.parse('{"scopplatformredirecter":{"general":{"title":"Redirects","errorTitle":"Error","moreInformation":"Further information","moreInformationLink":"https://scope01.com/en/shopware-redirect-plugin/"},"list":{"columnSourceUrl":"Source URL","columnTargetUrl":"Target URL","columnHttpCode":"HTTP Status Code","columnEnabled":"Enabled","createButton":"Add Redirect","exportAllButton":"Export All","importButton":"Import","fileNotCreated":"The file could not be created","fileNotImported":"The file could not be imported","invalidFile":"Invalid File","importDone":"Import finished","fileImportedNoSkip":"{amount} Redirects where imported","fileImported":"{amount} Redirects where imported.<br>{skipped} Redirects where not imported because they already existed and should not be overridden","importModal":{"title":"Import","cancel":"Cancel","import":"Import","override":"Override same Source URL","overrideHelp":"If a Source URL already exists, the Target URL and the HTTP Status Code will be overridden with this option. {moreInformation}","overrideID":"Override same ID","overrideIDHelp":"If the ID already exists, the existing entry will be overridden with this option. {moreInformation}"}},"detail":{"sourceUrlLabel":"Source URL","targetUrlLabel":"Target URL","httpCodeLabel":"HTTP Status Code","enabledLabel":"Enabled","cancelButton":"Cancel","saveButton":"Save","errorSameUrlDescription":"The source URL and target URL must not be the same","httpCodeLabelValues":{"301":"301 (Moved Permanently)","302":"302 (Moved Temporarily)"}}}}')}});